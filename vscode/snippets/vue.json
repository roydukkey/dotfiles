{
	// PATH: ~/Library/Application Support/Code/User/snippets/vue.json
	//
	// =================================================================================================================
	//
	// Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Vue Scaffold w/TypeScript": {
		"prefix": "vuets",
		"description": "Scaffolds a new Vue component using TypeScript and SCSS",
		"body": [
			"<template>",
			"\t$0",
			"</template>",
			"",
			"<script lang=\"ts\" setup>",
			"",
			"export interface Props {",
			"\t",
			"}",
			"",
			"</script>",
			"",
			"<style lang=\"scss\" scoped>",
			"",
			"</style>"
		]
	},
	"Vue Wrapper Component": {
		"prefix": "vuets-complete",
		"description": "Scaffolds a new Vue wrapper component using TypeScript and SCSS.",
		"body": [
			"<template>",
			"\t<${1:ds-text} :class=\"\\$style.vcl\">",
			"\t\t<template v-for=\"_, name in \\$slots\" #[name]=\"slotData\">",
			"\t\t\t<slot :name=\"name\" v-bind=\"slotData\" />",
			"\t\t</template>",
			"\t</${1}>",
			"</template>",
			"",
			"<script lang=\"ts\" setup>",
			"",
			"export interface Props {",
			"\t$0",
			"};",
			"",
			"export type Emits = (name: 'click', event: PointerEvent) => void;",
			"",
			"withDefaults(defineProps<Props>(), {",
			"\t",
			"});",
			"defineEmits<Emits>();",
			"",
			"</script>",
			"",
			"<style lang=\"scss\" module>",
			"",
			"@use '.' as *;",
			"",
			".vcl {",
			"\t@include component();",
			"}",
			"",
			"</style>"
		]
	}
}
